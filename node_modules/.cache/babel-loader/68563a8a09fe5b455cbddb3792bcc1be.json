{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nconst passport = require('passport');\n/**\n * Passport's default/connect middleware.\n */\n\n\nconst _initialize = require('passport/lib/middleware/initialize');\n\nconst _authenticate = require('passport/lib/middleware/authenticate');\n\nconst createReqMock = require('./request').create;\n/**\n * Passport's initialization middleware for Koa.\n *\n * @return {GeneratorFunction}\n * @api private\n */\n\n\nfunction initialize(passport) {\n  const middleware = promisify(_initialize(passport));\n  return function passportInitialize(ctx, next) {\n    // koa <-> connect compatibility:\n    const userProperty = passport._userProperty || 'user'; // check ctx.req has the userProperty\n\n    if (!ctx.req.hasOwnProperty(userProperty)) {\n      Object.defineProperty(ctx.req, userProperty, {\n        enumerable: true,\n        get: function () {\n          return ctx.state[userProperty];\n        },\n        set: function (val) {\n          ctx.state[userProperty] = val;\n        }\n      });\n    } // create mock object for express' req object\n\n\n    const req = createReqMock(ctx, userProperty); // add Promise-based login method\n\n    const login = req.login;\n\n    ctx.login = ctx.logIn = function (user, options) {\n      return new Promise((resolve, reject) => {\n        login.call(req, user, options, err => {\n          if (err) reject(err);else resolve();\n        });\n      });\n    }; // add aliases for passport's request extensions to Koa's context\n\n\n    ctx.logout = ctx.logOut = req.logout.bind(req);\n    ctx.isAuthenticated = req.isAuthenticated.bind(req);\n    ctx.isUnauthenticated = req.isUnauthenticated.bind(req);\n    return middleware(req, ctx).then(function () {\n      return next();\n    });\n  };\n}\n/**\n * Passport's authenticate middleware for Koa.\n *\n * @param {String|Array} name\n * @param {Object} options\n * @param {GeneratorFunction} callback\n * @return {GeneratorFunction}\n * @api private\n */\n\n\nfunction authenticate(passport, name, options, callback) {\n  // normalize arguments\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (callback) {\n    // When the callback is set, neither `next`, `res.redirect` or `res.end`\n    // are called. That is, a workaround to catch the `callback` is required.\n    // The `passportAuthenticate()` method below will therefore set\n    // `callback.resolve` and `callback.reject`. Then, once the authentication\n    // finishes, the modified callback calls the original one and afterwards\n    // triggers either `callback.resolve` or `callback.reject` to inform\n    // `passportAuthenticate()` that we are ready.\n    const _callback = callback;\n\n    callback = function (err, user, info, status) {\n      try {\n        Promise.resolve(_callback(err, user, info, status)).then(() => callback.resolve(false)).catch(err => callback.reject(err));\n      } catch (err) {\n        callback.reject(err);\n      }\n    };\n  }\n\n  const middleware = promisify(_authenticate(passport, name, options, callback));\n  return function passportAuthenticate(ctx, next) {\n    // this functions wraps the connect middleware\n    // to catch `next`, `res.redirect` and `res.end` calls\n    const p = new Promise((resolve, reject) => {\n      // mock the `req` object\n      const req = createReqMock(ctx, options.assignProperty || passport._userProperty || 'user');\n\n      function setBodyAndResolve(content) {\n        if (content) ctx.body = content;\n        resolve(false);\n      } // mock the `res` object\n\n\n      const res = {\n        redirect: function (url) {\n          ctx.redirect(url);\n          resolve(false);\n        },\n        set: ctx.set.bind(ctx),\n        setHeader: ctx.set.bind(ctx),\n        end: setBodyAndResolve,\n        send: setBodyAndResolve,\n\n        set statusCode(status) {\n          ctx.status = status;\n        },\n\n        get statusCode() {\n          return ctx.status;\n        }\n\n      };\n      req.res = res; // update the custom callback above\n\n      if (callback) {\n        callback.resolve = resolve;\n        callback.reject = reject;\n      } // call the connect middleware\n\n\n      middleware(req, res).then(resolve, reject);\n    });\n    return p.then(cont => {\n      // cont equals `false` when `res.redirect` or `res.end` got called\n      // in this case, call next to continue through Koa's middleware stack\n      if (cont !== false) {\n        return next();\n      }\n    });\n  };\n}\n/**\n * Passport's authorize middleware for Koa.\n *\n * @param {String|Array} name\n * @param {Object} options\n * @param {GeneratorFunction} callback\n * @return {GeneratorFunction}\n * @api private\n */\n\n\nfunction authorize(passport, name, options, callback) {\n  options = options || {};\n  options.assignProperty = 'account';\n  return authenticate(passport, name, options, callback);\n}\n/**\n * Framework support for Koa.\n *\n * This module provides support for using Passport with Koa. It exposes\n * middleware that conform to the `fn*(next)` signature and extends\n * Node's built-in HTTP request object with useful authentication-related\n * functions.\n *\n * @return {Object}\n * @api protected\n */\n\n\nmodule.exports = function () {\n  return {\n    initialize: initialize,\n    authenticate: authenticate,\n    authorize: authorize\n  };\n};\n\nfunction promisify(expressMiddleware) {\n  return function (req, res) {\n    return new Promise(function (resolve, reject) {\n      expressMiddleware(req, res, function (err, result) {\n        if (err) reject(err);else resolve(result);\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/node_modules/koa-passport/lib/framework/koa.js"],"names":["passport","require","_initialize","_authenticate","createReqMock","create","initialize","middleware","promisify","passportInitialize","ctx","next","userProperty","_userProperty","req","hasOwnProperty","Object","defineProperty","enumerable","get","state","set","val","login","logIn","user","options","Promise","resolve","reject","call","err","logout","logOut","bind","isAuthenticated","isUnauthenticated","then","authenticate","name","callback","_callback","info","status","catch","passportAuthenticate","p","assignProperty","setBodyAndResolve","content","body","res","redirect","url","setHeader","end","send","statusCode","cont","authorize","module","exports","expressMiddleware","result"],"mappings":"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","sourcesContent":["'use strict'\n\n/**\n * Module dependencies.\n */\nconst passport = require('passport')\n\n/**\n * Passport's default/connect middleware.\n */\nconst _initialize   = require('passport/lib/middleware/initialize')\nconst _authenticate = require('passport/lib/middleware/authenticate')\nconst createReqMock = require('./request').create\n\n/**\n * Passport's initialization middleware for Koa.\n *\n * @return {GeneratorFunction}\n * @api private\n */\nfunction initialize(passport) {\n  const middleware = promisify(_initialize(passport))\n  return function passportInitialize(ctx, next) {\n    // koa <-> connect compatibility:\n    const userProperty = passport._userProperty || 'user'\n    // check ctx.req has the userProperty\n    if (!ctx.req.hasOwnProperty(userProperty)) {\n      Object.defineProperty(ctx.req, userProperty, {\n        enumerable: true,\n        get: function() {\n          return ctx.state[userProperty]\n        },\n        set: function(val) {\n          ctx.state[userProperty] = val\n        }\n      })\n    }\n\n    // create mock object for express' req object\n    const req = createReqMock(ctx, userProperty)\n\n\n    // add Promise-based login method\n    const login  = req.login\n    ctx.login = ctx.logIn = function(user, options) {\n      return new Promise((resolve, reject) => {\n        login.call(req, user, options, err => {\n          if (err) reject(err)\n          else resolve()\n        })\n      })\n    }\n\n    // add aliases for passport's request extensions to Koa's context\n    ctx.logout = ctx.logOut = req.logout.bind(req)\n    ctx.isAuthenticated     = req.isAuthenticated.bind(req)\n    ctx.isUnauthenticated   = req.isUnauthenticated.bind(req)\n\n    return middleware(req, ctx).then(function() {\n      return next()\n    })\n  }\n}\n\n/**\n * Passport's authenticate middleware for Koa.\n *\n * @param {String|Array} name\n * @param {Object} options\n * @param {GeneratorFunction} callback\n * @return {GeneratorFunction}\n * @api private\n */\nfunction authenticate(passport, name, options, callback) {\n  // normalize arguments\n  if (typeof options === 'function') {\n    callback = options\n    options  = {}\n  }\n  options = options || {}\n\n  if (callback) {\n    // When the callback is set, neither `next`, `res.redirect` or `res.end`\n    // are called. That is, a workaround to catch the `callback` is required.\n    // The `passportAuthenticate()` method below will therefore set\n    // `callback.resolve` and `callback.reject`. Then, once the authentication\n    // finishes, the modified callback calls the original one and afterwards\n    // triggers either `callback.resolve` or `callback.reject` to inform\n    // `passportAuthenticate()` that we are ready.\n    const _callback = callback\n    callback = function(err, user, info, status) {\n      try {\n        Promise.resolve(_callback(err, user, info, status))\n               .then(() => callback.resolve(false))\n               .catch(err => callback.reject(err))\n      } catch (err) {\n        callback.reject(err)\n      }\n    }\n  }\n\n  const middleware = promisify(_authenticate(passport, name, options, callback))\n\n  return function passportAuthenticate(ctx, next) {\n    // this functions wraps the connect middleware\n    // to catch `next`, `res.redirect` and `res.end` calls\n    const p = new Promise((resolve, reject) => {\n      // mock the `req` object\n      const req = createReqMock(ctx, options.assignProperty || passport._userProperty || 'user')\n\n      function setBodyAndResolve(content) {\n        if (content) ctx.body = content\n        resolve(false)\n      }\n\n      // mock the `res` object\n      const res = {\n        redirect: function(url) {\n          ctx.redirect(url)\n          resolve(false)\n        },\n        set: ctx.set.bind(ctx),\n        setHeader: ctx.set.bind(ctx),\n        end: setBodyAndResolve,\n        send: setBodyAndResolve,\n        set statusCode(status) {\n          ctx.status = status\n        },\n        get statusCode() {\n          return ctx.status\n        }\n      }\n\n      req.res = res\n\n      // update the custom callback above\n      if (callback) {\n        callback.resolve = resolve\n        callback.reject  = reject\n      }\n\n      // call the connect middleware\n      middleware(req, res).then(resolve, reject)\n    })\n\n    return p.then(cont => {\n      // cont equals `false` when `res.redirect` or `res.end` got called\n      // in this case, call next to continue through Koa's middleware stack\n      if (cont !== false) {\n        return next()\n      }\n    })\n  }\n}\n\n/**\n * Passport's authorize middleware for Koa.\n *\n * @param {String|Array} name\n * @param {Object} options\n * @param {GeneratorFunction} callback\n * @return {GeneratorFunction}\n * @api private\n */\nfunction authorize(passport, name, options, callback) {\n  options = options || {}\n  options.assignProperty = 'account'\n\n  return authenticate(passport, name, options, callback)\n}\n\n/**\n * Framework support for Koa.\n *\n * This module provides support for using Passport with Koa. It exposes\n * middleware that conform to the `fn*(next)` signature and extends\n * Node's built-in HTTP request object with useful authentication-related\n * functions.\n *\n * @return {Object}\n * @api protected\n */\nmodule.exports = function() {\n  return {\n    initialize:   initialize,\n    authenticate: authenticate,\n    authorize:    authorize\n  }\n}\n\nfunction promisify(expressMiddleware) {\n  return function(req, res) {\n    return new Promise(function(resolve, reject) {\n      expressMiddleware(req, res, function(err, result) {\n        if (err) reject(err)\n        else resolve(result)\n      })\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}