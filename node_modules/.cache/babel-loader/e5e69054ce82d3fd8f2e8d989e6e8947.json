{"ast":null,"code":"/**\n * resolveCookies - Attempts to retrieve the token from a cookie\n *\n * This function uses the opts.cookie option to retrieve the token\n *\n * @param {Object}        ctx  The ctx object passed to the middleware\n * @param {Object}        opts This middleware's options\n * @return {String|null|undefined}  The resolved token or null if not found or undefined if opts.cookie is not set\n */\nmodule.exports = function resolveCookies(ctx, opts) {\n  return opts.cookie && ctx.cookies.get(opts.cookie);\n};","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/node_modules/koa-jwt/lib/resolvers/cookie.js"],"names":["module","exports","resolveCookies","ctx","opts","cookie","cookies","get"],"mappings":"AAAA;;;;;;;;;AASAA,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAChD,SAAOA,IAAI,CAACC,MAAL,IAAeF,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgBH,IAAI,CAACC,MAArB,CAAtB;AACH,CAFD","sourcesContent":["/**\n * resolveCookies - Attempts to retrieve the token from a cookie\n *\n * This function uses the opts.cookie option to retrieve the token\n *\n * @param {Object}        ctx  The ctx object passed to the middleware\n * @param {Object}        opts This middleware's options\n * @return {String|null|undefined}  The resolved token or null if not found or undefined if opts.cookie is not set\n */\nmodule.exports = function resolveCookies(ctx, opts) {\n    return opts.cookie && ctx.cookies.get(opts.cookie);\n};\n"]},"metadata":{},"sourceType":"script"}