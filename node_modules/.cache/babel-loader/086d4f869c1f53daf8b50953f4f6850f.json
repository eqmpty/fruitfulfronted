{"ast":null,"code":"var zlib = require('zlib');\n\nmodule.exports = inflate;\n\nfunction inflate(stream, options) {\n  if (!stream) {\n    throw new TypeError('argument stream is required');\n  }\n\n  options = options || {};\n  var encoding = options.encoding || stream.headers && stream.headers['content-encoding'] || 'identity';\n\n  switch (encoding) {\n    case 'gzip':\n    case 'deflate':\n      break;\n\n    case 'identity':\n      return stream;\n\n    default:\n      var err = new Error('Unsupported Content-Encoding: ' + encoding);\n      err.status = 415;\n      throw err;\n  } // no not pass-through encoding\n\n\n  delete options.encoding;\n  return stream.pipe(zlib.Unzip(options));\n}","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/node_modules/inflation/index.js"],"names":["zlib","require","module","exports","inflate","stream","options","TypeError","encoding","headers","err","Error","status","pipe","Unzip"],"mappings":"AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAChC,MAAI,CAACD,MAAL,EAAa;AACX,UAAM,IAAIE,SAAJ,CAAc,6BAAd,CAAN;AACD;;AAEDD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,MAAIE,QAAQ,GAAGF,OAAO,CAACE,QAAR,IACTH,MAAM,CAACI,OAAP,IAAkBJ,MAAM,CAACI,OAAP,CAAe,kBAAf,CADT,IAEV,UAFL;;AAIA,UAAQD,QAAR;AACA,SAAK,MAAL;AACA,SAAK,SAAL;AACE;;AACF,SAAK,UAAL;AACE,aAAOH,MAAP;;AACF;AACE,UAAIK,GAAG,GAAG,IAAIC,KAAJ,CAAU,mCAAmCH,QAA7C,CAAV;AACAE,MAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACA,YAAMF,GAAN;AATF,GAXgC,CAuBhC;;;AACA,SAAOJ,OAAO,CAACE,QAAf;AAEA,SAAOH,MAAM,CAACQ,IAAP,CAAYb,IAAI,CAACc,KAAL,CAAWR,OAAX,CAAZ,CAAP;AACD","sourcesContent":["\nvar zlib = require('zlib')\n\nmodule.exports = inflate\n\nfunction inflate(stream, options) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  options = options || {}\n\n  var encoding = options.encoding\n    || (stream.headers && stream.headers['content-encoding'])\n    || 'identity'\n\n  switch (encoding) {\n  case 'gzip':\n  case 'deflate':\n    break\n  case 'identity':\n    return stream\n  default:\n    var err = new Error('Unsupported Content-Encoding: ' + encoding)\n    err.status = 415\n    throw err\n  }\n\n  // no not pass-through encoding\n  delete options.encoding\n\n  return stream.pipe(zlib.Unzip(options))\n}\n"]},"metadata":{},"sourceType":"script"}