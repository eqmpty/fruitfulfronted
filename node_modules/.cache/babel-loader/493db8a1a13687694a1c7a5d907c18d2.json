{"ast":null,"code":"'use strict';\n\nconst vary = require('vary');\n/**\n * CORS middleware\n *\n * @param {Object} [options]\n *  - {String|Function(ctx)} origin `Access-Control-Allow-Origin`, default is request Origin header\n *  - {String|Array} allowMethods `Access-Control-Allow-Methods`, default is 'GET,HEAD,PUT,POST,DELETE,PATCH'\n *  - {String|Array} exposeHeaders `Access-Control-Expose-Headers`\n *  - {String|Array} allowHeaders `Access-Control-Allow-Headers`\n *  - {String|Number} maxAge `Access-Control-Max-Age` in seconds\n *  - {Boolean} credentials `Access-Control-Allow-Credentials`\n *  - {Boolean} keepHeadersOnError Add set headers to `err.header` if an error is thrown\n * @return {Function} cors middleware\n * @api public\n */\n\n\nmodule.exports = function (options) {\n  const defaults = {\n    allowMethods: 'GET,HEAD,PUT,POST,DELETE,PATCH'\n  };\n  options = Object.assign({}, defaults, options);\n\n  if (Array.isArray(options.exposeHeaders)) {\n    options.exposeHeaders = options.exposeHeaders.join(',');\n  }\n\n  if (Array.isArray(options.allowMethods)) {\n    options.allowMethods = options.allowMethods.join(',');\n  }\n\n  if (Array.isArray(options.allowHeaders)) {\n    options.allowHeaders = options.allowHeaders.join(',');\n  }\n\n  if (options.maxAge) {\n    options.maxAge = String(options.maxAge);\n  }\n\n  options.credentials = !!options.credentials;\n  options.keepHeadersOnError = options.keepHeadersOnError === undefined || !!options.keepHeadersOnError;\n  return async function cors(ctx, next) {\n    // If the Origin header is not present terminate this set of steps.\n    // The request is outside the scope of this specification.\n    const requestOrigin = ctx.get('Origin'); // Always set Vary header\n    // https://github.com/rs/cors/issues/10\n\n    ctx.vary('Origin');\n    if (!requestOrigin) return await next();\n    let origin;\n\n    if (typeof options.origin === 'function') {\n      origin = options.origin(ctx);\n      if (origin instanceof Promise) origin = await origin;\n      if (!origin) return await next();\n    } else {\n      origin = options.origin || requestOrigin;\n    }\n\n    const headersSet = {};\n\n    function set(key, value) {\n      ctx.set(key, value);\n      headersSet[key] = value;\n    }\n\n    if (ctx.method !== 'OPTIONS') {\n      // Simple Cross-Origin Request, Actual Request, and Redirects\n      set('Access-Control-Allow-Origin', origin);\n\n      if (options.credentials === true) {\n        set('Access-Control-Allow-Credentials', 'true');\n      }\n\n      if (options.exposeHeaders) {\n        set('Access-Control-Expose-Headers', options.exposeHeaders);\n      }\n\n      if (!options.keepHeadersOnError) {\n        return await next();\n      }\n\n      try {\n        return await next();\n      } catch (err) {\n        const errHeadersSet = err.headers || {};\n        const varyWithOrigin = vary.append(errHeadersSet.vary || errHeadersSet.Vary || '', 'Origin');\n        delete errHeadersSet.Vary;\n        err.headers = Object.assign({}, errHeadersSet, headersSet, {\n          vary: varyWithOrigin\n        });\n        throw err;\n      }\n    } else {\n      // Preflight Request\n      // If there is no Access-Control-Request-Method header or if parsing failed,\n      // do not set any additional headers and terminate this set of steps.\n      // The request is outside the scope of this specification.\n      if (!ctx.get('Access-Control-Request-Method')) {\n        // this not preflight request, ignore it\n        return await next();\n      }\n\n      ctx.set('Access-Control-Allow-Origin', origin);\n\n      if (options.credentials === true) {\n        ctx.set('Access-Control-Allow-Credentials', 'true');\n      }\n\n      if (options.maxAge) {\n        ctx.set('Access-Control-Max-Age', options.maxAge);\n      }\n\n      if (options.allowMethods) {\n        ctx.set('Access-Control-Allow-Methods', options.allowMethods);\n      }\n\n      let allowHeaders = options.allowHeaders;\n\n      if (!allowHeaders) {\n        allowHeaders = ctx.get('Access-Control-Request-Headers');\n      }\n\n      if (allowHeaders) {\n        ctx.set('Access-Control-Allow-Headers', allowHeaders);\n      }\n\n      ctx.status = 204;\n    }\n  };\n};","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/node_modules/@koa/cors/index.js"],"names":["vary","require","module","exports","options","defaults","allowMethods","Object","assign","Array","isArray","exposeHeaders","join","allowHeaders","maxAge","String","credentials","keepHeadersOnError","undefined","cors","ctx","next","requestOrigin","get","origin","Promise","headersSet","set","key","value","method","err","errHeadersSet","headers","varyWithOrigin","append","Vary","status"],"mappings":"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","sourcesContent":["'use strict';\n\nconst vary = require('vary');\n\n/**\n * CORS middleware\n *\n * @param {Object} [options]\n *  - {String|Function(ctx)} origin `Access-Control-Allow-Origin`, default is request Origin header\n *  - {String|Array} allowMethods `Access-Control-Allow-Methods`, default is 'GET,HEAD,PUT,POST,DELETE,PATCH'\n *  - {String|Array} exposeHeaders `Access-Control-Expose-Headers`\n *  - {String|Array} allowHeaders `Access-Control-Allow-Headers`\n *  - {String|Number} maxAge `Access-Control-Max-Age` in seconds\n *  - {Boolean} credentials `Access-Control-Allow-Credentials`\n *  - {Boolean} keepHeadersOnError Add set headers to `err.header` if an error is thrown\n * @return {Function} cors middleware\n * @api public\n */\nmodule.exports = function(options) {\n  const defaults = {\n    allowMethods: 'GET,HEAD,PUT,POST,DELETE,PATCH',\n  };\n\n  options = Object.assign({}, defaults, options);\n\n  if (Array.isArray(options.exposeHeaders)) {\n    options.exposeHeaders = options.exposeHeaders.join(',');\n  }\n\n  if (Array.isArray(options.allowMethods)) {\n    options.allowMethods = options.allowMethods.join(',');\n  }\n\n  if (Array.isArray(options.allowHeaders)) {\n    options.allowHeaders = options.allowHeaders.join(',');\n  }\n\n  if (options.maxAge) {\n    options.maxAge = String(options.maxAge);\n  }\n\n  options.credentials = !!options.credentials;\n  options.keepHeadersOnError = options.keepHeadersOnError === undefined || !!options.keepHeadersOnError;\n\n  return async function cors(ctx, next) {\n    // If the Origin header is not present terminate this set of steps.\n    // The request is outside the scope of this specification.\n    const requestOrigin = ctx.get('Origin');\n\n    // Always set Vary header\n    // https://github.com/rs/cors/issues/10\n    ctx.vary('Origin');\n\n    if (!requestOrigin) return await next();\n\n    let origin;\n    if (typeof options.origin === 'function') {\n      origin = options.origin(ctx);\n      if (origin instanceof Promise) origin = await origin;\n      if (!origin) return await next();\n    } else {\n      origin = options.origin || requestOrigin;\n    }\n\n    const headersSet = {};\n\n    function set(key, value) {\n      ctx.set(key, value);\n      headersSet[key] = value;\n    }\n\n    if (ctx.method !== 'OPTIONS') {\n      // Simple Cross-Origin Request, Actual Request, and Redirects\n      set('Access-Control-Allow-Origin', origin);\n\n      if (options.credentials === true) {\n        set('Access-Control-Allow-Credentials', 'true');\n      }\n\n      if (options.exposeHeaders) {\n        set('Access-Control-Expose-Headers', options.exposeHeaders);\n      }\n\n      if (!options.keepHeadersOnError) {\n        return await next();\n      }\n      try {\n        return await next();\n      } catch (err) {\n        const errHeadersSet = err.headers || {};\n        const varyWithOrigin = vary.append(errHeadersSet.vary || errHeadersSet.Vary || '', 'Origin');\n        delete errHeadersSet.Vary;\n\n        err.headers = Object.assign({}, errHeadersSet, headersSet, { vary: varyWithOrigin });\n\n        throw err;\n      }\n    } else {\n      // Preflight Request\n\n      // If there is no Access-Control-Request-Method header or if parsing failed,\n      // do not set any additional headers and terminate this set of steps.\n      // The request is outside the scope of this specification.\n      if (!ctx.get('Access-Control-Request-Method')) {\n        // this not preflight request, ignore it\n        return await next();\n      }\n\n      ctx.set('Access-Control-Allow-Origin', origin);\n\n      if (options.credentials === true) {\n        ctx.set('Access-Control-Allow-Credentials', 'true');\n      }\n\n      if (options.maxAge) {\n        ctx.set('Access-Control-Max-Age', options.maxAge);\n      }\n\n      if (options.allowMethods) {\n        ctx.set('Access-Control-Allow-Methods', options.allowMethods);\n      }\n\n      let allowHeaders = options.allowHeaders;\n      if (!allowHeaders) {\n        allowHeaders = ctx.get('Access-Control-Request-Headers');\n      }\n      if (allowHeaders) {\n        ctx.set('Access-Control-Allow-Headers', allowHeaders);\n      }\n\n      ctx.status = 204;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"script"}