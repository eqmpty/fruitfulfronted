{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nconst typeis = require('type-is');\n\nconst json = require('./json');\n\nconst form = require('./form');\n\nconst text = require('./text');\n\nconst jsonTypes = ['json', 'application/*+json', 'application/csp-report'];\nconst formTypes = ['urlencoded'];\nconst textTypes = ['text'];\n/**\n * Return a Promise which parses form and json requests\n * depending on the Content-Type.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function (req, opts) {\n  req = req.req || req;\n  opts = opts || {}; // json\n\n  const jsonType = opts.jsonTypes || jsonTypes;\n  if (typeis(req, jsonType)) return json(req, opts); // form\n\n  const formType = opts.formTypes || formTypes;\n  if (typeis(req, formType)) return form(req, opts); // text\n\n  const textType = opts.textTypes || textTypes;\n  if (typeis(req, textType)) return text(req, opts); // invalid\n\n  const type = req.headers['content-type'] || '';\n  const message = type ? 'Unsupported content-type: ' + type : 'Missing content-type';\n  const err = new Error(message);\n  err.status = 415;\n  throw err;\n};","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/node_modules/co-body/lib/any.js"],"names":["typeis","require","json","form","text","jsonTypes","formTypes","textTypes","module","exports","req","opts","jsonType","formType","textType","type","headers","message","err","Error","status"],"mappings":"AAAA;AAEA;;;;AAIA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMI,SAAS,GAAG,CAAE,MAAF,EAAU,oBAAV,EAAgC,wBAAhC,CAAlB;AACA,MAAMC,SAAS,GAAG,CAAE,YAAF,CAAlB;AACA,MAAMC,SAAS,GAAG,CAAE,MAAF,CAAlB;AAEA;;;;;;;;;;;;;AAaAC,MAAM,CAACC,OAAP,GAAiB,gBAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACzCD,EAAAA,GAAG,GAAGA,GAAG,CAACA,GAAJ,IAAWA,GAAjB;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf,CAFyC,CAIzC;;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACN,SAAL,IAAkBA,SAAnC;AACA,MAAIL,MAAM,CAACU,GAAD,EAAME,QAAN,CAAV,EAA2B,OAAOV,IAAI,CAACQ,GAAD,EAAMC,IAAN,CAAX,CANc,CAQzC;;AACA,QAAME,QAAQ,GAAGF,IAAI,CAACL,SAAL,IAAkBA,SAAnC;AACA,MAAIN,MAAM,CAACU,GAAD,EAAMG,QAAN,CAAV,EAA2B,OAAOV,IAAI,CAACO,GAAD,EAAMC,IAAN,CAAX,CAVc,CAYzC;;AACA,QAAMG,QAAQ,GAAGH,IAAI,CAACJ,SAAL,IAAkBA,SAAnC;AACA,MAAIP,MAAM,CAACU,GAAD,EAAMI,QAAN,CAAV,EAA2B,OAAOV,IAAI,CAACM,GAAD,EAAMC,IAAN,CAAX,CAdc,CAgBzC;;AACA,QAAMI,IAAI,GAAGL,GAAG,CAACM,OAAJ,CAAY,cAAZ,KAA+B,EAA5C;AACA,QAAMC,OAAO,GAAGF,IAAI,GAAG,+BAA+BA,IAAlC,GAAyC,sBAA7D;AACA,QAAMG,GAAG,GAAG,IAAIC,KAAJ,CAAUF,OAAV,CAAZ;AACAC,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACA,QAAMF,GAAN;AACD,CAtBD","sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst typeis = require('type-is');\nconst json = require('./json');\nconst form = require('./form');\nconst text = require('./text');\n\nconst jsonTypes = [ 'json', 'application/*+json', 'application/csp-report' ];\nconst formTypes = [ 'urlencoded' ];\nconst textTypes = [ 'text' ];\n\n/**\n * Return a Promise which parses form and json requests\n * depending on the Content-Type.\n *\n * Pass a node request or an object with `.req`,\n * such as a koa Context.\n *\n * @param {Request} req\n * @param {Options} [opts]\n * @return {Function}\n * @api public\n */\n\nmodule.exports = async function(req, opts) {\n  req = req.req || req;\n  opts = opts || {};\n\n  // json\n  const jsonType = opts.jsonTypes || jsonTypes;\n  if (typeis(req, jsonType)) return json(req, opts);\n\n  // form\n  const formType = opts.formTypes || formTypes;\n  if (typeis(req, formType)) return form(req, opts);\n\n  // text\n  const textType = opts.textTypes || textTypes;\n  if (typeis(req, textType)) return text(req, opts);\n\n  // invalid\n  const type = req.headers['content-type'] || '';\n  const message = type ? 'Unsupported content-type: ' + type : 'Missing content-type';\n  const err = new Error(message);\n  err.status = 415;\n  throw err;\n};\n"]},"metadata":{},"sourceType":"script"}