{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001'\n});\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FRON INSTANCE';\ninstance.interceptors.request.use(config => {\n  // const token = JSON.parse(localStorage.getItem('user')).token;\n  if (!config.headers.Authorization) {\n    config.headers['Authorization'] = token;\n  }\n\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n}, error => {\n  Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/home/ouroboroser/Рабочий стол/try/front/src/services/tokenprovider.js"],"names":["axios","instance","create","baseURL","defaults","headers","common","interceptors","request","use","config","Authorization","token","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAC;AADkB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,eAAjC,IAAoD,0BAApD;AAEAL,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACIC,MAAM,IAAI;AACN;AACA,MAAG,CAACA,MAAM,CAACL,OAAP,CAAeM,aAAnB,EAAkC;AAC9BD,IAAAA,MAAM,CAACL,OAAP,CAAe,eAAf,IAAkCO,KAAlC;AACH;;AACDF,EAAAA,MAAM,CAACL,OAAP,CAAe,cAAf,IAAiC,kBAAjC;AACA,SAAOK,MAAP;AACH,CARL,EASIG,KAAK,IAAI;AACLC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAXL;AAcA,eAAeZ,QAAf","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:'http://localhost:3001'\n});\n\ninstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FRON INSTANCE';\n\ninstance.interceptors.request.use(\n    config => {\n        // const token = JSON.parse(localStorage.getItem('user')).token;\n        if(!config.headers.Authorization) {\n            config.headers['Authorization'] = token;\n        }\n        config.headers['Content-Type'] = 'application/json';\n        return config;\n    },\n    error => {\n        Promise.reject(error);\n    }\n)\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}